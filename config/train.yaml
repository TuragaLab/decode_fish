seed: 0

device:
    gpu_device: cuda 
  
run_name: test/test_sub

cfg_path: /groups/turaga/home/speisera/Dropbox (mackelab)/Artur/WorkDB/deepstorm/decode_fish/config/train.yaml
  
output:
    project: test
    group: nb_run 
    save_dir: /groups/turaga/home/speisera/Mackebox/Artur/WorkDB/deepstorm/models/fishcod/${output.project}/${output.group}/${run_name}
    log_dir : /groups/turaga/home/speisera/Mackebox/Artur/WorkDB/deepstorm/decode_fish/runs/
    log_figs : True
    log_interval: 100
  
data_path: 
    image_path: /groups/turaga/home/speisera/share_TUM/FishSIM/sim_1/mRNAlevel_200/cell3D/strong/w1_HelaKyoto_Gapdh_2597_p01_cy3__Cell_CP_14__cell3D__1.tif
#     psf_path: /groups/turaga/home/speisera/Mackebox/Artur/WorkDB/deepstorm/decode_fish/data/gaussian_psf.pkl
    psf_path: /groups/turaga/home/speisera/Mackebox/Artur/WorkDB/deepstorm/decode_fish/data/simfish_psf.pkl
    model_init:
    
evaluation:
    image_path: ${data_path.image_path}
    txt_path: /groups/turaga/home/speisera/share_TUM/FishSIM/sim_1/mRNAlevel_200/cell3D/strong/w1_HelaKyoto_Gapdh_2597_p01_cy3__Cell_CP_14__cell3D__1.txt
    crop_sl: s_[:,100:250,100:250,25:60]
    px_size: [100,100,300]
    
prob_generator:
    low: 0.00000001
    high: 0.005
    
bg_estimation:
    _target_: decode_fish.funcs.dataset.EstimateBackground
    smoothing_filter_size: 6
    div_factor: 1
    
random_crop: 
    crop_sz: 48

roi_mask:
    pool_size: [10,10,10]
    percentile: 70 # Percentage of volume that is removed
               
PSF:
    _target_: decode_fish.engine.psf.LinearInterpolatedPSF 
    upsample_factor: 1
    device: ${device.gpu_device}
    
noise:
    _target_: decode_fish.engine.noise.sCMOS
    theta: 2. 
    baseline:  0.09
    
microscope:
    multipl: 50
    psf_extent_zyx : [11,21,21]
    psf_noise: 
    clamp_mode: 'cp'

dataloader:
    bs: 2
    
foci:
    _target_: decode_fish.funcs.dataset.AddFoci
    n_foci_avg: 2.
    rad_range: [25,200]
    n_mol_range: [5,30]
    px_size_xyz: ${evaluation.px_size}
    mode: 'gaussian'
    
model:
    _target_: decode_fish.engine.model.UnetDecodeNoBn
    depth: 2
    f_maps: 32
    inp_scale: 
    inp_offset: 
    p_offset: -4.0
    order: 'ce'
    
post_proc:
    _target_: decode_fish.funcs.output_trafo.ISIPostProcess
    m1_threshold: 0.05
    samp_threshold: 0.3
    px_size: ${evaluation.px_size}
    diag: True
    
supervised:
    num_iter: 12000
    lr: 5e-4
    bl_loss_scale: 0.01
    cnt_loss_scale: 1
    p_quantile: 0.
    grad_clip: 0.03
    gamma: 0.5
    step_size: 6000
  
autoencoder:
    num_iter: 12000
    lr: 5e-5
    grad_clip: 0.03
    gamma: 0.5
    step_size: 6000
    freq_ae: 1
    norm_reg: 0

#min intensity when sampling
pointprocess:
    min_int: 0.2
  
# hydra:
#   run:
#     dir: ${output.save_dir}/${now:%H-%M-%S}
