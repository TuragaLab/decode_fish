base_dir: /groups/turaga/home/speisera/Mackebox/Artur/WorkDB/deepstorm/
run_name: test/test_sub
sub_name: 
cfg_path: ${base_dir}/decode_fish/config/train.yaml
seed: 0

n_int_ref:
    'sum': 1
    'per_bit': ${genm.exp_type.n_bits}
    'per_channel': ${genm.exp_type.n_channels}
    
device:
    gpu_device: cuda 
  
output:
    project: test
    group: nb_run 
    save_dir: ${base_dir}/models/fishcod/${output.project}/${output.group}/${run_name}
    log_dir : ${base_dir}/decode_fish/runs
    log_figs : True
    log_interval: 100
    wandb_mode: online # offline , disabled
  
data_path: 
    image_path:
    image_proc:
        swap_dim: [0,1,2,3]
        crop_sl: s_[:,:,:,:]
    image_sim:
        image_shape: 
    psf_path: 
    model_init: 
    micro_init: 
    
evaluation:
    px_size_zyx: [100,100,100]
    reconstruction:
        enabled: False
        image_path: ${data_path.image_path}
        sm_fish_ch: ${genm.exp_type.sm_fish_ch}
        txt_path: 
        psf_path: 
        crop_sl: s_[:,:,:,:]
        img_ind: 0
    code_stats: 
        enabled: False
        path: ${data_path.image_path}
        top_n: 15000
        
genm:
    exp_type:
        n_channels: 1
        n_genes: 1
        n_bits: 1
        int_inf: 'sum' # 'per_bit', 'per_channel'
        sample_from_codebook: False
        phasing: False
        const_theta_sim: True
        slice_rec: False
        pred_z: True
    PSF:
        _target_: decode_fish.engine.psf.LinearInterpolatedPSF 
        device: ${device.gpu_device}
        gauss_radii: [1.,1.,1.]
        psf_extent_zyx : [21,21,21]
        n_cols: 1
    noise:
        _target_: decode_fish.engine.noise.sCMOS
        theta: 2. 
        baseline: 0.
        channels: ${genm.exp_type.n_channels} 
        sim_scale: 1.
    intensity_dist:
        int_conc: 3.
        int_rate: 3.
        int_loc: 3. 
    microscope:
        _target_: decode_fish.engine.microscope.Microscope
        scale: 100
        psf_noise: 0.1
        pos_noise_xy: 0.5
        pos_noise_z: 0.1
        slice_rec: ${genm.exp_type.slice_rec} 
        norm: 'max'    
        ch_facs:
    foci:
        _target_: decode_fish.funcs.dataset.AddFoci
        n_foci_avg: 0.
        rad_range: [100,500]
        n_mol_range: [5,40]
        px_size_zyx: ${evaluation.px_size_zyx}
        mode: 'bin'
    emitter_noise:
        rate_fac: 2.
        int_fac: 0.25
    prob_generator:
        low: 1e-8
        high: 0.005
        
sim:
    random_crop: 
        crop_sz: 48
    roi_mask:
        pool_size: [10,10,10]
        percentile: 50 # Percentage of volume that is not sampled from
    bg_estimation:
        smoothing:
            _target_: decode_fish.funcs.dataset.GaussianSmoothing
            smoothing_filter_size: 5
        uniform:
            _target_: decode_fish.funcs.dataset.UniformValue
            min_val: 100.
            max_val: 100.
        fractal:
            _target_: decode_fish.funcs.dataset.AddPerlinNoise
            shape: ${sim.random_crop.crop_sz}
            res: [2,4,4]
            octaves: 3
            persistence: 0.5
            scale: 0
 
network:
    _target_: decode_fish.engine.model.UnetDecodeNoBn
    depth: 2
    ch_in: ${genm.exp_type.n_channels} 
    f_maps: 32
    n_p_ch: ${genm.exp_type.n_genes}
    n_bg_ch: ${genm.exp_type.n_channels}
    n_int_ch: ${n_int_ref[${genm.exp_type.int_inf}]}
    is_2D: False
    pred_z: ${genm.exp_type.pred_z}
    inp_scale: 
    inp_offset: 
    p_offset: -4.0
    order: 'ce'
    int_conc: ${genm.intensity_dist.int_conc}
    int_rate: ${genm.intensity_dist.int_rate}
    int_loc:  ${genm.intensity_dist.int_loc}
    
post_proc_isi:
    _target_: decode_fish.funcs.output_trafo.ISIPostProcess
    m1_threshold: 0.03
    samp_threshold: 0.7
    px_size_zyx: ${evaluation.px_size_zyx}
    diag: True
    
training:
    bs: 2
    start_iter: 0
    num_iters: 30000
    start_int: 0
    start_mic: 0 
    old_loss: False
    int_option: 1
    
    z_sig_fac: 0.5
    loss_option: 1
    count_mult: 0
    cat_logits: 0
    resume: False
    
    net:
        enabled: True
        bl_loss_scale: 0.01
        cnt_loss_scale: 1
        grad_clip: 0.005
        sched:   
            _target_: torch.optim.lr_scheduler.StepLR
            gamma: 0.5
            step_size: 5000
        opt:
            _target_: torch_optimizer.QHAdam
            lr: 5e-4
            
    mic:
        enabled: True
        roi_rec: True
        grad_clip: 0.1
        norm_reg: 0.5
        l1_reg: 0.
        par_grads:
            channel_facs: False
            channel_shifts: False
            theta_par: False
            psf_vol: False
        opt:
            _target_: torch_optimizer.QHAdam
            lr: 0.00025
        sched:
            _target_: torch.optim.lr_scheduler.StepLR
            gamma: 0.5
            step_size: 5000
            
    int:
        enabled: True
        grad_clip: 
        opt:
            _target_: torch_optimizer.QHAdam
            lr: 0.001
        sched:
            _target_: torch.optim.lr_scheduler.StepLR
            gamma: 0.5
            step_size: 5000