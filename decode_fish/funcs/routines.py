# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/17_eval_routines.ipynb (unless otherwise specified).

__all__ = ['base_path', 'get_df_from_hdf5', 'add_df_to_hdf5', 'load_all']

# Cell
from ..imports import *
from .file_io import *
from .emitter_io import *
from .utils import *
from .dataset import *
from .output_trafo import *
from .evaluation import *
from .plotting import *
from .visualization import *
from torch.utils.data import DataLoader
from ..engine.microscope import Microscope
from ..engine.point_process import PointProcessUniform
from .dataset import EstimateBackground
import h5py

base_path =  '/groups/turaga/home/speisera/Mackebox/Artur/WorkDB/deepstorm/'

# Cell
def get_df_from_hdf5(group):

    df = DF()
    for k in group.keys():
        df[k] = group[k][()]
    return df

def add_df_to_hdf5(parent, name, df):

    g = parent.create_group(name)
    for k in df.keys():
        g.create_dataset(k, data=df[k].values)

# Cell
def load_all(cfg, sl=False):
    path = Path(cfg.output.save_dir)/'sl_save' if sl else Path(cfg.output.save_dir)
    model = hydra.utils.instantiate(cfg.model)
    model = load_model_state(model, path, 'model.pkl')
    post_proc = hydra.utils.instantiate(cfg.post_proc_isi, samp_threshold=0.5)
    psf, noise, micro = load_psf_noise_micro(cfg)
    psf.load_state_dict(torch.load(path/'psf.pkl'))
    micro.load_state_dict(torch.load(path/'microscope.pkl'))
    psf.cuda()
    img_3d, decode_dl = get_dataloader(cfg)

    return model, post_proc, psf, micro, img_3d, decode_dl